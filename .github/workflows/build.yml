name: 4. Build and Push Docker Images

on:
  workflow_run:
    workflows: ["2. Test", "3. Security"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-backend-dev:
    name: Build Backend Image (Dev)
    runs-on: ubuntu-latest
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch' }}
    environment:
      name: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get ACR name from Terraform state
        id: terraform-outputs
        run: |
          # Install Terraform
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install terraform

          # Get outputs from Terraform state
          cd infra/environments/dev
          terraform init
          ACR_NAME=$(terraform output -raw acr_name)
          ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
          echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT
          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ steps.terraform-outputs.outputs.acr_name }}

      - name: Build and push backend Docker image
        run: |
          cd backend
          docker build -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:${{ env.IMAGE_TAG }} \
                       -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:dev-latest .
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:${{ env.IMAGE_TAG }}
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:dev-latest

      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:${{ env.IMAGE_TAG }}
          format: 'sarif'
          output: 'trivy-backend-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-backend-results.sarif'
          category: 'backend-image-dev'

  build-frontend-dev:
    name: Build Frontend Image (Dev)
    runs-on: ubuntu-latest
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch' }}
    environment:
      name: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get ACR name from Terraform state
        id: terraform-outputs
        run: |
          # Install Terraform
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install terraform

          # Get outputs from Terraform state
          cd infra/environments/dev
          terraform init
          ACR_NAME=$(terraform output -raw acr_name)
          ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
          echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT
          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ steps.terraform-outputs.outputs.acr_name }}

      - name: Build and push frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:${{ env.IMAGE_TAG }} \
                       -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:dev-latest .
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:${{ env.IMAGE_TAG }}
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:dev-latest

      - name: Scan frontend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:${{ env.IMAGE_TAG }}
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-frontend-results.sarif'
          category: 'frontend-image-dev'
