name: 3. Security

on:
  workflow_run:
    workflows: ["1. Lint"]
    types:
      - completed
  schedule:
    # Run weekly on Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  bandit:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    name: Bandit Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install bandit
        run: |
          uv pip install --system bandit[toml]

      - name: Run Bandit
        run: |
          bandit -r backend/src frontend/src -f json -o bandit-report.json || true
          bandit -r backend/src frontend/src

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-report
          path: bandit-report.json

  trivy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner (filesystem)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-fs-results.sarif'

  pip-audit:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    name: pip-audit Dependency Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install pip-audit
        run: |
          uv pip install --system pip-audit

      - name: Run pip-audit on backend
        run: |
          cd backend
          pip-audit --requirement pyproject.toml --format json --output ../backend-audit.json || true
          pip-audit --requirement pyproject.toml

      - name: Run pip-audit on frontend
        run: |
          cd frontend
          pip-audit --requirement pyproject.toml --format json --output ../frontend-audit.json || true
          pip-audit --requirement pyproject.toml

      - name: Upload audit reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pip-audit-reports
          path: |
            backend-audit.json
            frontend-audit.json
