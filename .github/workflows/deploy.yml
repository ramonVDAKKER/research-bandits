name: 5. Deploy Applications

on:
  workflow_run:
    workflows: ["4. Build and Push Docker Images"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - Dev
          - Prd
      image_tag:
        description: 'Image tag to deploy (default: dev-latest for Dev, prd-latest for Prd)'
        required: false
      backend_parameters:
        description: 'JSON string of parameters for backend job (e.g., {"param1": "value1"})'
        required: false
        default: '{}'

permissions:
  contents: read

jobs:
  deploy-backend-dev:
    name: Deploy Backend (Dev)
    runs-on: ubuntu-latest
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'Dev') }}
    environment:
      name: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Terraform outputs
        id: terraform-outputs
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install terraform

          cd infra/environments/dev
          terraform init
          RESOURCE_GROUP=$(terraform output -raw resource_group_name)
          BACKEND_JOB_NAME=$(terraform output -raw backend_job_name)
          ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
          echo "resource_group=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
          echo "backend_job_name=$BACKEND_JOB_NAME" >> $GITHUB_OUTPUT
          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Container App Job image
        run: |
          IMAGE_TAG="${{ github.event.inputs.image_tag || 'dev-latest' }}"

          az containerapp job update \
            --name ${{ steps.terraform-outputs.outputs.backend_job_name }} \
            --resource-group ${{ steps.terraform-outputs.outputs.resource_group }} \
            --image "${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:${IMAGE_TAG}"

  deploy-frontend-dev:
    name: Deploy Frontend (Dev)
    runs-on: ubuntu-latest
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'Dev') }}
    environment:
      name: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Terraform outputs
        id: terraform-outputs
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install terraform

          cd infra/environments/dev
          terraform init
          RESOURCE_GROUP=$(terraform output -raw resource_group_name)
          FRONTEND_APP_NAME=$(terraform output -raw frontend_app_name)
          ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
          echo "resource_group=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
          echo "frontend_app_name=$FRONTEND_APP_NAME" >> $GITHUB_OUTPUT
          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to App Service
        run: |
          IMAGE_TAG="${{ github.event.inputs.image_tag || 'dev-latest' }}"

          az webapp config container set \
            --name ${{ steps.terraform-outputs.outputs.frontend_app_name }} \
            --resource-group ${{ steps.terraform-outputs.outputs.resource_group }} \
            --docker-custom-image-name "${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:${IMAGE_TAG}" \
            --docker-registry-server-url "https://${{ steps.terraform-outputs.outputs.acr_login_server }}"

      - name: Restart App Service
        run: |
          az webapp restart \
            --name ${{ steps.terraform-outputs.outputs.frontend_app_name }} \
            --resource-group ${{ steps.terraform-outputs.outputs.resource_group }}

      - name: Get App URL
        run: |
          echo "Frontend deployed to: https://${{ steps.terraform-outputs.outputs.frontend_app_name }}.azurewebsites.net"

  build-and-deploy-prd:
    name: Build and Deploy (Prd)
    runs-on: ubuntu-latest
    needs: [deploy-backend-dev, deploy-frontend-dev]
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'Prd') }}
    environment:
      name: Prd

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Terraform outputs (Prd)
        id: terraform-outputs
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install terraform

          cd infra/environments/prd
          terraform init
          RESOURCE_GROUP=$(terraform output -raw resource_group_name)
          BACKEND_JOB_NAME=$(terraform output -raw backend_job_name)
          FRONTEND_APP_NAME=$(terraform output -raw frontend_app_name)
          ACR_NAME=$(terraform output -raw acr_name)
          ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
          echo "resource_group=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
          echo "backend_job_name=$BACKEND_JOB_NAME" >> $GITHUB_OUTPUT
          echo "frontend_app_name=$FRONTEND_APP_NAME" >> $GITHUB_OUTPUT
          echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT
          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ steps.terraform-outputs.outputs.acr_name }}

      - name: Build and push backend Docker image (Prd)
        run: |
          cd backend
          docker build -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:${{ github.sha }} \
                       -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:prd-latest .
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:${{ github.sha }}
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:prd-latest

      - name: Build and push frontend Docker image (Prd)
        run: |
          cd frontend
          docker build -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:${{ github.sha }} \
                       -t ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:prd-latest .
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:${{ github.sha }}
          docker push ${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:prd-latest

      - name: Update Backend Container App Job (Prd)
        run: |
          IMAGE_TAG="${{ github.event.inputs.image_tag || 'prd-latest' }}"

          az containerapp job update \
            --name ${{ steps.terraform-outputs.outputs.backend_job_name }} \
            --resource-group ${{ steps.terraform-outputs.outputs.resource_group }} \
            --image "${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-backend:${IMAGE_TAG}"

      - name: Deploy Frontend to App Service (Prd)
        run: |
          IMAGE_TAG="${{ github.event.inputs.image_tag || 'prd-latest' }}"

          az webapp config container set \
            --name ${{ steps.terraform-outputs.outputs.frontend_app_name }} \
            --resource-group ${{ steps.terraform-outputs.outputs.resource_group }} \
            --docker-custom-image-name "${{ steps.terraform-outputs.outputs.acr_login_server }}/research-bandits-frontend:${IMAGE_TAG}" \
            --docker-registry-server-url "https://${{ steps.terraform-outputs.outputs.acr_login_server }}"

      - name: Restart Frontend App Service (Prd)
        run: |
          az webapp restart \
            --name ${{ steps.terraform-outputs.outputs.frontend_app_name }} \
            --resource-group ${{ steps.terraform-outputs.outputs.resource_group }}

      - name: Deployment Summary
        run: |
          echo "🚀 Production Deployment Complete!"
          echo "Backend Job: ${{ steps.terraform-outputs.outputs.backend_job_name }}"
          echo "Frontend URL: https://${{ steps.terraform-outputs.outputs.frontend_app_name }}.azurewebsites.net"
